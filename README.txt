 
 　★　『ハル研究所プログラミングコンテスト2015』へようこそ！　★
 
         Copyright HAL Laboratory, Inc. All rights reserved.
 
 
 この度は『ハル研究所プログラミングコンテスト2015』へのご参加、
 誠にありがとうございます。
 今回の問題は、題して「宅配便」です。
 皆さんのアイディアに富んだ作品をお待ちしています。
 
------------------------------------------------------------------------
 問題ルール
------------------------------------------------------------------------

 マップの中央には営業所があり、本日配達する荷物が保管されています。
 午前中、午後1、午後2、夜間の4つの時間帯に分けて配達を行います。


■1ステージの流れ

 各時間帯は、積み込みと配達の2段階に分かれています。
 最初に営業所で、その時間帯に配達する荷物の積み込みを行い
 配達に出発します。

 積んであるすべての荷物の配達を終え、営業所に戻ってきたところで、
 その時間帯の配達は終了です。

 すべての時間帯を終えれば、1ステージが終了となります。
 なお、積み込み、および配達での1回の移動を「ターン」と呼びます。
 1000ターンが経過しても、すべての荷物の配達を終えて営業所に
 戻ることができなかった場合、そのステージは強制的に終了となります。


■マップについて

 左下を原点とするグリッド状になっていて、壁のあるマスと、
 壁のないマスがあります。
 外周は必ず壁で囲まれています。


■荷物について

 荷物には、配達先の座標、重さ、配達する時間帯が指定されています。
 ただし、時間帯は指定されてないものもあります。


■積み込み

 トラックには最大積載重量が決められており、それを超えない範囲
 までなら好きなだけ積み込めますが、その時間帯に指定されている
 荷物は必ず積み込まなければなりません。

 また、時間帯が指定されてない荷物は、どの時間帯に配達しても
 かまいませんが、4つの時間帯のうちのどこかで必ず配達しなければ
 なりません。

 積み込みが終わったら、配達開始となります。
 なお、1個も積み込まなかったときは、この時間帯は即座に終了です。


■配達

 トラックはマップ上の壁のないマスを、1ターンで1マス移動できます。
 この移動方法で、必ずすべての配達先に到達できます。

 トラックは、1マス移動するごとに、トラック自身の重さと、
 積んでいる荷物の重さを足した分の燃料を消費します。
 燃料は十分に入れてあるので、ガス欠になることはありませんが、
 消費した燃料が少ないほど高得点になります。

 トラックが配達先の座標に到着すると、その荷物は自動的にトラックから
 下ろされて配達完了となります。

 すべての荷物の配達を終えたら営業所に戻り、その時間帯は終了です。

 途中で営業所のあるマスを通過してもかまいませんが、追加で荷物を
 積み込むことはできません。


■各種パラメータ

 荷物の個数 1～16
 荷物の重さ 1～3の整数(ただし、同じ重さの荷物は6個まで)
 トラックの重さ 3
 トラックの最大積載重量 15
 マップの広さ 縦、横それぞれ19～31。ただし、4で割ると3余る数。


・スコアの計算方法
 1日が終わった時点で、すべての荷物の配達を終えていたら、
 以下の計算式で求められるスコアが得られます。

 マップの幅 * マップの高さ * 配達した荷物の個数 * 10000 / 1日に消費した燃料の合計
  (小数点以下切り捨て)

 ただし、以下の場合は、このステージのスコアは0点になります。

　・指定されている時間帯の荷物を積み込まなかった場合
  ・配達済みの荷物を積み込んだ場合
  ・別の時間帯に指定されている荷物を積み込んだ場合
  ・最大積載重量を超えて積み込んだ場合
  ・最後の時間帯に、残りの荷物をすべて積み込まなかった場合
  ・存在しない荷物を積み込もうとした場合


■入力

 荷物の個数が1～16の16段階あります。

 壁の多さは、かなり少なめのものから、ある地点から別の地点への行き方が
 1通りしかないものまで、5段階あります。

 時間帯指定されている荷物の割合は、まったく指定されていないものから、
 すべて指定されているものまで、6段階あります。

 すべての組み合わせについて1回ずつ、合計480回実行されます。
 なお、下記の選考基準にも記載がありますが、応募期間終了後の再評価時には、
 この480回を1セットとして、4セット、合計1920回実行されます。


------------------------------------------------------------------------
 Answer.cppの内容
------------------------------------------------------------------------

 Answer.cpp には、以下の関数が含まれます。

 void Answer::Init(const Stage& aStage);
 ステージの初期化関数です。必要に応じて初期化を行ってください。

 void Answer::InitPeriod(const Stage& aStage, ItemGroup& aItemGroup);
 時間帯別の初期化関数です。この時間帯に積み込む荷物を決定し、
 aItemGroup に設定してください。

 Action Answer::GetNextAction(const Stage& aStage);
 配達時に呼ばれる関数です。次に移動する方向を返してください。

 void Answer::FinalizePeriod(const Stage& aStage, StageState aStageState, int aCost);
 時間帯の終了時に呼ばれます。ステージの状況(失敗したかどうか)や、
 消費した燃料が渡されます。必要に応じて、時間帯の終了処理を行ってください。

 void Answer::Finalize(const Stage& aStage, StageState aStageState, int aScore);
 ステージの終了時に呼ばれます。ステージの状況(失敗したかどうか)や、
 スコアが渡されます。必要に応じて、ステージの終了処理を行ってください。

------------------------------------------------------------------------
 選考基準
------------------------------------------------------------------------

■スコアと処理時間

 ステージを規定回数繰り返し、スコアの合計を競います。
 スコアが高いほど上位となります。
 スコアが同点の場合は、処理時間が短い作品から上位とします。
 スコアも処理時間も同じ場合は、先に応募された作品から上位とします。

■最終スコア

 応募期間終了後、問題生成に使用する乱数のシード値を変更し、
 全応募作品の再評価を行います。
 再評価は、4回分実行し、その平均点と平均の実行時間を最終的なスコアとし、
 順位を決定します。

 応募期間中は実行時間を重視し、実行回数を少なめにしていますが、
 最終的な評価では、より公平を期するためにこのようにしています。
 スコアが同点だった場合の順位付けについては上記と同じです。

■再評価に関する注意点

 応募時にエラーやタイムアウトにならなかった作品でも、応募期間終了後の
 再評価によってエラーやタイムアウトになる可能性があります。
 手元でいくつかの乱数シードを試すなど、安定した作品を目指すことを
 おすすめします。
 詳しくは「補足」を参照してください。

------------------------------------------------------------------------
 問題パッケージの内容（抜粋）
------------------------------------------------------------------------
 
 ・README.txt         はじめにお読みください 
 ・Answer.cpp         応募作品サンプル 
 ・HPC2015.sln        Visual Studio 2013用ソリューションファイル 
 ・HPC2015.vcxproj    Visual Studio 2013用プロジェクトファイル
 ・HPC2015.xcodeproj  Xcode用プロジェクトファイル 
 ・Makefile           GNU Make用Makefile
 ・viewer             ビューア

　上記以外に、チェックプログラムのソースファイルもあります。
　ビューアについては、後述の「ビューア」をお読みください。
 
【ご注意】
 ・問題パッケージに含まれるファイルやツールを、プロコン参加目的
 　以外で使用すること、および再配布することを禁じます。
 
 ・問題パッケージに含まれるファイルやツールを使用したことによって
 　生じる損害について、ハル研究所は一切の責任を負わないものとします。

------------------------------------------------------------------------
 チェック方法
------------------------------------------------------------------------
 　
 問題パッケージに含まれるチェックプログラムのソースファイルを
 お持ちの環境でコンパイルして実行してください。
 実行すると、実装した関数が正しいかどうかチェックし、正しければ
 スコアを表示します。
 　
 本番の評価時は、DEBUGが定義されずにコンパイルされます。
 お持ちの環境でのみ実行したいコードは、DEBUG定義で括ってください。

------------------------------------------------------------------------
 ビューア
------------------------------------------------------------------------

 問題パッケージには、作品の挙動を確認できるビューアも含まれています。
 ビューアはwebブラウザで動作し、チェックプログラムから出力される
 JSONファイルを読み込むことで動作させることができます。
 　
 チェックプログラムからJSONファイルを出力するためには、
 コマンドプロンプトや端末などのコンソールから-j オプションをつけて
 プログラムを実行し、実行結果をファイルにリダイレクトします。
 　
 下の例は、JSONファイルを output.json に出力しています。
 　./hpc2015 -j > output.json
 　
 またビューアでは、以下のライブラリを利用しています。　
 　jQuery, jQueryUI, vue.js

------------------------------------------------------------------------
 動作確認済み環境
------------------------------------------------------------------------

■チェックプログラム 
　
 Visual Studio 2013 (HPC2015.sln, HPC2015.vcxproj を使用)
 Xcode 6.3.2        (HPC2015.xcodeproj を使用)
 GNU-CC 4.9.4       (Makefile を使用)
 　
■ビューア

 Windows 10 / Edge 20.10240.16384.0 / Chrome 46.0.2490.86m
 Mac OS X v10.11 / Safari 9
 ※上記以外のブラウザでは正しく動作しない場合があります。

------------------------------------------------------------------------
 応募していただくもの
------------------------------------------------------------------------
 　
 応募していただくのは、Answer.cpp またはこれに相当するソース
 コードです。
 ログインしてマイページの「応募する」で、テキストボックスに
 ソースコードとコメント（任意入力、64文字まで）を入力して
 送信してください。

------------------------------------------------------------------------
 作品規定
------------------------------------------------------------------------

・オリジナルのプログラムに限ります。

・使用可能な言語はC++です。※C++11が使えます。
　ただし、以下の機能は使用できません。

　・インラインアセンブラ
　・例外(try,catch,throw等)

・標準ライブラリが使えます。
　適宜、必要なファイルをインクルードして使用してください。

・マルチスレッド、マルチプロセスは禁止とします。

・#pragma は使用できません。

・巨大な応募作品はエラーとなることがあります。

・問題パッケージでは制限時間はありませんが、評価環境での
　制限時間は15秒です。
　ただし、応募期間終了後の再評価は4回分実行するため、
　制限時間も60秒です。

・応募前に必ずPC上で実行して、チェックが通ることを確認してください。

・特定のステージに依存したチューニングを行うことを禁止します。
　例えば、X番目のステージの時は、あらかじめ用意した配列に基づいて
　行動を決定するというような処理は禁止とします。

・応募作品のチェックはハル研究所オリジナルの評価環境で行いますが、
　問題パッケージに含まれるものと同一のチェックプログラムでの
　チェックとなります。
　ただし、PC上と評価環境で実行結果が変わる場合があります。

・応募作品は応募時に自動チェックされますが、後ほど実行委員会が
　直接チェックする場合があります。たとえチェックが通っていても、
　不適切と認められる場合は無効と判定されることがありますので
　ご了承ください。

------------------------------------------------------------------------
 補足
------------------------------------------------------------------------

 ・Answer.cppの各関数の引数のオブジェクトのconstをキャスト等で外す
   行為を禁止します。
 　
 ・上記のようなキャスト等をせずに合法的にアクセスできる
 　メンバ関数には、自由にアクセスして構いません。
 　
 ・GetNextAction関数の戻り値が4方向のいずれでもない場合は
   実行時エラーとなります。
 　
 ・使用するコンパイラの挙動により、PC上と評価環境で実行結果が
 　変わる場合があります。
 　実行委員会では例えば、未初期化変数における初期値の違いや、
 　関数に渡す引数の評価順序の違い、浮動小数の計算に伴う
 　誤差によって結果が変わる現象を確認しています。
 　
 ・乱数のシードは、問題パッケージ内のファイル HPCRandom.cpp に
 　含まれる DefaultSeedX, DefaultSeedY, DefaultSeedZ, DefaultSeedW 
 　の4つの整数値から決定され、これらを変更することで、プログラムが
 　いろいろなシードの値で動作するかどうかを確かめることが可能です。

------------------------------------------------------------------------
 お問い合わせ先
------------------------------------------------------------------------
 　
 ハル研究所プログラミングコンテスト実行委員会
 progcon2015-info@hallab.co.jp
